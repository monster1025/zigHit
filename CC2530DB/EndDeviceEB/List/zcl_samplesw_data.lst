###############################################################################
#
# IAR C/C++ Compiler V10.30.1.6000 for 8051               16/Mar/2020  15:19:22
# Copyright 2004-2018 IAR Systems AB.
# Evaluation license - IAR Embedded Workbench for 8051, Evaluation edition 10.30
#
#    Core               =  plain
#    Code model         =  banked
#    Data model         =  large
#    Calling convention =  xdata reentrant
#    Constant location  =  data_rom
#    Dptr setup         =  1,16
#                          
#    Source file        =  
#        C:\Texas Instruments\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\zigIt\Source\zcl_samplesw_data.c
#    Command line       =  
#        -f C:\Users\monster\AppData\Local\Temp\EW1F42.tmp ("C:\Texas
#        Instruments\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\zigIt\Source\zcl_samplesw_data.c"
#        -D NV_INIT -D xNV_RESTORE -D TC_LINKKEY_JOIN -D ZBA_FALLBACK_NWKKEY -D
#        xPOWER_SAVING -D NWK_AUTO_POLL -D ZTOOL_P1 -D MT_TASK -D MT_APP_FUNC
#        -D MT_SYS_FUNC -D MT_ZDO_FUNC -D MT_ZDO_MGMT -D xZCL_EZMODE -D
#        MT_APP_CNF_FUNC -D MULTICAST_ENABLED=FALSE -D ZCL_READ -D ZCL_DISCOVER
#        -D ZCL_WRITE -D ZCL_REPORT -D ZCL_BASIC -D ZCL_IDENTIFY -D ZCL_ON_OFF
#        -D ZCL_GROUPS -D ZCL_DIAGNOSTIC -D FEATURE_SYSTEM_STATS -D
#        HAL_KEY=FALSE -D HAL_LED=FALSE -D HAL_LCD=FALSE -D HAL_UART=FALSE -D
#        BDB_REPORTING -lC "C:\Texas Instruments\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\zigIt\CC2530DB\EndDeviceEB\List"
#        -lA "C:\Texas Instruments\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\zigIt\CC2530DB\EndDeviceEB\List"
#        --diag_suppress Pe001,Pa010 -o "C:\Texas Instruments\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\zigIt\CC2530DB\EndDeviceEB\Obj"
#        -e --debug --core=plain --dptr=16,1 --data_model=large
#        --code_model=banked --calling_convention=xdata_reentrant
#        --place_constants=data_rom --nr_virtual_regs 16 -f "C:\Texas
#        Instruments\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\zigIt\CC2530DB\..\..\..\Tools\CC2530DB\f8wEndev.cfg"
#        (-DCPU32MHZ -DROOT=__near_func -DMAC_CFG_TX_DATA_MAX=3
#        -DMAC_CFG_TX_MAX=6 -DMAC_CFG_RX_MAX=3) -f "C:\Texas
#        Instruments\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\zigIt\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg"
#        (-DZIGBEEPRO -DSECURE=1 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR
#        -DDEFAULT_CHANLIST=MAX_CHANNELS_24GHZ -DZDAPP_CONFIG_PAN_ID=0xFFFF
#        -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MASK=0x007F
#        -DBEACON_REQUEST_DELAY=100 -DBEACON_REQ_DELAY_MASK=0x00FF
#        -DLINK_STATUS_JITTER_MASK=0x007F -DROUTE_EXPIRY_TIME=30
#        -DAPSC_ACK_WAIT_DURATION_POLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7
#        -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3
#        -DNWK_MAX_DATA_RETRIES=2 -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9
#        -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40 -DNWK_MAX_BINDING_ENTRIES=4
#        -DMAX_BINDING_CLUSTER_IDS=4 -DMAC_MAX_FRAME_SIZE=116
#        -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const __code"
#        -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000
#        -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100 -DREJOIN_POLL_RATE=440
#        -DREJOIN_BACKOFF=900000 -DREJOIN_SCAN=900000 -DENABLE_LED4_DISABLE_S1)
#        -f "C:\Texas Instruments\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\zigIt\CC2530DB\..\..\..\Tools\CC2530DB\f8wZCL.cfg"
#        -I "C:\Texas Instruments\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\zigIt\CC2530DB\" -I "C:\Texas
#        Instruments\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\zigIt\CC2530DB\..\Source\" -I
#        "C:\Texas Instruments\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\zigIt\CC2530DB\..\..\Source\" -I
#        "C:\Texas Instruments\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\zigIt\CC2530DB\..\..\..\ZMain\TI2530DB\"
#        -I "C:\Texas Instruments\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\zigIt\CC2530DB\..\..\..\..\..\Components\hal\include\"
#        -I "C:\Texas Instruments\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\zigIt\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\"
#        -I "C:\Texas Instruments\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\zigIt\CC2530DB\..\..\..\..\..\Components\mac\include\"
#        -I "C:\Texas Instruments\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\zigIt\CC2530DB\..\..\..\..\..\Components\mac\high_level\"
#        -I "C:\Texas Instruments\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\zigIt\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\"
#        -I "C:\Texas Instruments\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\zigIt\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\single_chip\"
#        -I "C:\Texas Instruments\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\zigIt\CC2530DB\..\..\..\..\..\Components\mt\"
#        -I "C:\Texas Instruments\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\zigIt\CC2530DB\..\..\..\..\..\Components\osal\include\"
#        -I "C:\Texas Instruments\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\zigIt\CC2530DB\..\..\..\..\..\Components\services\saddr\"
#        -I "C:\Texas Instruments\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\zigIt\CC2530DB\..\..\..\..\..\Components\services\sdata\"
#        -I "C:\Texas Instruments\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\zigIt\CC2530DB\..\..\..\..\..\Components\stack\af\"
#        -I "C:\Texas Instruments\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\zigIt\CC2530DB\..\..\..\..\..\Components\stack\bdb\"
#        -I "C:\Texas Instruments\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\zigIt\CC2530DB\..\..\..\..\..\Components\stack\gp\"
#        -I "C:\Texas Instruments\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\zigIt\CC2530DB\..\..\..\..\..\Components\stack\nwk\"
#        -I "C:\Texas Instruments\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\zigIt\CC2530DB\..\..\..\..\..\Components\stack\sapi\"
#        -I "C:\Texas Instruments\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\zigIt\CC2530DB\..\..\..\..\..\Components\stack\sec\"
#        -I "C:\Texas Instruments\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\zigIt\CC2530DB\..\..\..\..\..\Components\stack\sys\"
#        -I "C:\Texas Instruments\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\zigIt\CC2530DB\..\..\..\..\..\Components\stack\zcl\"
#        -I "C:\Texas Instruments\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\zigIt\CC2530DB\..\..\..\..\..\Components\stack\zdo\"
#        -I "C:\Texas Instruments\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\zigIt\CC2530DB\..\..\..\..\..\Components\zmac\"
#        -I "C:\Texas Instruments\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\zigIt\CC2530DB\..\..\..\..\..\Components\zmac\f8w\"
#        -Ohz --require_prototypes)
#    Locale             =  Russian_RUS.1251
#    List file          =  
#        C:\Texas Instruments\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\zigIt\CC2530DB\EndDeviceEB\List\zcl_samplesw_data.lst
#    Object file        =  
#        C:\Texas Instruments\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\zigIt\CC2530DB\EndDeviceEB\Obj\zcl_samplesw_data.r51
#
###############################################################################

C:\Texas Instruments\Z-Stack 3.0.1\Projects\zstack\HomeAutomation\zigIt\Source\zcl_samplesw_data.c
      1          /**************************************************************************************************
      2            Filename:       zcl_samplesw_data.c
      3            Revised:        $Date: 2014-07-30 12:57:37 -0700 (Wed, 30 Jul 2014) $
      4            Revision:       $Revision: 39591 $
      5          
      6          
      7            Description:    Zigbee Cluster Library - sample device application.
      8          
      9          
     10            Copyright 2006-2014 Texas Instruments Incorporated. All rights reserved.
     11          
     12            IMPORTANT: Your use of this Software is limited to those specific rights
     13            granted under the terms of a software license agreement between the user
     14            who downloaded the software, his/her employer (which must be your employer)
     15            and Texas Instruments Incorporated (the "License").  You may not use this
     16            Software unless you agree to abide by the terms of the License. The License
     17            limits your use, and you acknowledge, that the Software may not be modified,
     18            copied or distributed unless embedded on a Texas Instruments microcontroller
     19            or used solely and exclusively in conjunction with a Texas Instruments radio
     20            frequency transceiver, which is integrated into your product.  Other than for
     21            the foregoing purpose, you may not use, reproduce, copy, prepare derivative
     22            works of, modify, distribute, perform, display or sell this Software and/or
     23            its documentation for any purpose.
     24          
     25            YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
     26            PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
     27            INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE,
     28            NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
     29            TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
     30            NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
     31            LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
     32            INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
     33            OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
     34            OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
     35            (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
     36          
     37            Should you have any questions regarding your right to use this Software,
     38            contact Texas Instruments Incorporated at www.TI.com.
     39          **************************************************************************************************/
     40          
     41          /*********************************************************************
     42           * INCLUDES
     43           */
     44          #include "ZComDef.h"
     45          #include "OSAL.h"
     46          #include "AF.h"
     47          #include "ZDConfig.h"
     48          
     49          #include "zcl.h"
     50          #include "zcl_general.h"
     51          #include "zcl_ha.h"
     52          #include "zcl_poll_control.h"
     53          #include "zcl_electrical_measurement.h"
     54          #include "zcl_diagnostic.h"
     55          #include "zcl_meter_identification.h"
     56          #include "zcl_appliance_identification.h"
     57          #include "zcl_appliance_events_alerts.h"
     58          #include "zcl_power_profile.h"
     59          #include "zcl_appliance_control.h"
     60          #include "zcl_appliance_statistics.h"
     61          #include "zcl_hvac.h"
     62          
     63          #include "zcl_samplesw.h"
     64          
     65          /*********************************************************************
     66           * CONSTANTS
     67           */
     68          
     69          #define SAMPLESW_DEVICE_VERSION     1
     70          #define SAMPLESW_FLAGS              0
     71          
     72          #define SAMPLESW_HWVERSION          0
     73          #define SAMPLESW_ZCLVERSION         0
     74          
     75          #define DEFAULT_PHYSICAL_ENVIRONMENT 0
     76          #define DEFAULT_DEVICE_ENABLE_STATE DEVICE_ENABLED
     77          #define DEFAULT_IDENTIFY_TIME 0
     78          
     79          /*********************************************************************
     80           * TYPEDEFS
     81           */
     82          
     83          /*********************************************************************
     84           * MACROS
     85           */
     86          
     87          /*********************************************************************
     88           * GLOBAL VARIABLES
     89           */
     90          
     91          //global attributes

   \                                 In  segment XDATA_ROM_C, align 1
     92          const uint16 zclZigIt_clusterRevision_all = 0x0001; //currently all cluster implementations are according to ZCL6, which has revision #1. In the future it is possible that different clusters will have different revisions, so they will have to use separate attribute variables.
   \                     zclZigIt_clusterRevision_all:
   \   000000   0100         DW 1
     93          
     94          // Basic Cluster
     95          //ptvo.info
     96          //ptvo.switch

   \                                 In  segment XDATA_ROM_C, align 1
     97          const uint8 zclZigIt_HWRevision = SAMPLESW_HWVERSION;
   \                     zclZigIt_HWRevision:
   \   000000   00           DB 0

   \                                 In  segment XDATA_ROM_C, align 1
     98          const uint8 zclZigIt_ZCLVersion = SAMPLESW_ZCLVERSION;
   \                     zclZigIt_ZCLVersion:
   \   000000   00           DB 0

   \                                 In  segment XDATA_ROM_C, align 1
     99          const uint8 zclZigIt_ManufacturerName[] = { 9, 'p','t','v','o','.','i','n','f','o' };
   \                     zclZigIt_ManufacturerName:
   \   000000   09           DB 9
   \   000001   70           DB 112
   \   000002   74           DB 116
   \   000003   76           DB 118
   \   000004   6F           DB 111
   \   000005   2E           DB 46
   \   000006   69           DB 105
   \   000007   6E           DB 110
   \   000008   66           DB 102
   \   000009   6F           DB 111

   \                                 In  segment XDATA_ROM_C, align 1
    100          const uint8 zclZigIt_ModelId[] = { 11, 'p','t','v','o','.','s','w','i','t','c','h' };
   \                     zclZigIt_ModelId:
   \   000000   0B           DB 11
   \   000001   70           DB 112
   \   000002   74           DB 116
   \   000003   76           DB 118
   \   000004   6F           DB 111
   \   000005   2E           DB 46
   \   000006   73           DB 115
   \   000007   77           DB 119
   \   000008   69           DB 105
   \   000009   74           DB 116
   \   00000A   63           DB 99
   \   00000B   68           DB 104

   \                                 In  segment XDATA_ROM_C, align 1
    101          const uint8 zclZigIt_DateCode[] = { 16, '2','0','2','0','0','8','2','1',' ',' ',' ',' ',' ',' ',' ',' ' };
   \                     zclZigIt_DateCode:
   \   000000   10           DB 16
   \   000001   32           DB 50
   \   000002   30           DB 48
   \   000003   32           DB 50
   \   000004   30           DB 48
   \   000005   30           DB 48
   \   000006   38           DB 56
   \   000007   32           DB 50
   \   000008   31           DB 49
   \   000009   20           DB 32
   \   00000A   20           DB 32
   \   00000B   20           DB 32
   \   00000C   20           DB 32
   \   00000D   20           DB 32
   \   00000E   20           DB 32
   \   00000F   20           DB 32
   \   000010   20           DB 32

   \                                 In  segment XDATA_ROM_C, align 1
    102          const uint8 zclZigIt_PowerSource = POWER_SOURCE_MAINS_1_PHASE;
   \                     zclZigIt_PowerSource:
   \   000000   01           DB 1
    103          

   \                                 In  segment XDATA_I, align 1, keep-with-next
    104          uint8 zclZigIt_LocationDescription[17] = { 16, ' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ' };;
   \                     zclZigIt_LocationDescription:
   \   000000                DS 17
   \   000011                REQUIRE `?<Initializer for zclZigIt_LocationDescription`
   \   000011                REQUIRE __INIT_XDATA_I

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    105          uint8 zclZigIt_PhysicalEnvironment = 0;
   \                     zclZigIt_PhysicalEnvironment:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_I, align 1, keep-with-next
    106          uint8 zclZigIt_DeviceEnable = DEVICE_ENABLED;
   \                     zclZigIt_DeviceEnable:
   \   000000                DS 1
   \   000001                REQUIRE `?<Initializer for zclZigIt_DeviceEnable>`
   \   000001                REQUIRE __INIT_XDATA_I
    107          
    108          // Identify Cluster

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    109          uint16 zclZigIt_IdentifyTime = 0;
   \                     zclZigIt_IdentifyTime:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z
    110          
    111          /*********************************************************************
    112           * ATTRIBUTE DEFINITIONS - Uses REAL cluster IDs
    113           */
    114           
    115            // NOTE: The attributes listed in the AttrRec must be in ascending order 
    116            // per cluster to allow right function of the Foundation discovery commands
    117           

   \                                 In  segment CODE_C, align 1
    118          CONST zclAttrRec_t zclZigIt_Attrs[] =
   \                     zclZigIt_Attrs:
   \   000000   0000         DW 0
   \   000002   0000         DW 0
   \   000004   20           DB 32
   \   000005   01           DB 1
   \   000006   ....         DW zclZigIt_ZCLVersion
   \   000008   0000         DW 0
   \   00000A   0300         DW 3
   \   00000C   20           DB 32
   \   00000D   01           DB 1
   \   00000E   ....         DW zclZigIt_HWRevision
   \   000010   0000         DW 0
   \   000012   0400         DW 4
   \   000014   42           DB 66
   \   000015   01           DB 1
   \   000016   ....         DW zclZigIt_ManufacturerName
   \   000018   0000         DW 0
   \   00001A   0500         DW 5
   \   00001C   42           DB 66
   \   00001D   01           DB 1
   \   00001E   ....         DW zclZigIt_ModelId
   \   000020   0000         DW 0
   \   000022   0600         DW 6
   \   000024   42           DB 66
   \   000025   01           DB 1
   \   000026   ....         DW zclZigIt_DateCode
   \   000028   0000         DW 0
   \   00002A   0700         DW 7
   \   00002C   30           DB 48
   \   00002D   01           DB 1
   \   00002E   ....         DW zclZigIt_PowerSource
   \   000030   0000         DW 0
   \   000032   1000         DW 16
   \   000034   42           DB 66
   \   000035   03           DB 3
   \   000036   ....         DW zclZigIt_LocationDescription
   \   000038   0000         DW 0
   \   00003A   1100         DW 17
   \   00003C   30           DB 48
   \   00003D   03           DB 3
   \   00003E   ....         DW zclZigIt_PhysicalEnvironment
   \   000040   0000         DW 0
   \   000042   1200         DW 18
   \   000044   10           DB 16
   \   000045   03           DB 3
   \   000046   ....         DW zclZigIt_DeviceEnable
   \   000048   0000         DW 0
   \   00004A   FDFF         DW 65533
   \   00004C   21           DB 33
   \   00004D   01           DB 1
   \   00004E   ....         DW zclZigIt_clusterRevision_all
   \   000050   0300         DW 3
   \   000052   0000         DW 0
   \   000054   21           DB 33
   \   000055   03           DB 3
   \   000056   ....         DW zclZigIt_IdentifyTime
   \   000058   0300         DW 3
   \   00005A   FDFF         DW 65533
   \   00005C   21           DB 33
   \   00005D   41           DB 65
   \   00005E   ....         DW zclZigIt_clusterRevision_all
   \   000060   0700         DW 7
   \   000062   0000         DW 0
   \   000064   30           DB 48
   \   000065   01           DB 1
   \   000066   ....         DW zclZigIt_OnOffSwitchType
   \   000068   0700         DW 7
   \   00006A   1000         DW 16
   \   00006C   30           DB 48
   \   00006D   03           DB 3
   \   00006E   ....         DW zclZigIt_OnOffSwitchActions
   \   000070   0700         DW 7
   \   000072   FDFF         DW 65533
   \   000074   21           DB 33
   \   000075   01           DB 1
   \   000076   ....         DW zclZigIt_clusterRevision_all
   \   000078   0600         DW 6
   \   00007A   FDFF         DW 65533
   \   00007C   21           DB 33
   \   00007D   81           DB 129
   \   00007E   ....         DW zclZigIt_clusterRevision_all
   \   000080   0400         DW 4
   \   000082   FDFF         DW 65533
   \   000084   21           DB 33
   \   000085   81           DB 129
   \   000086   ....         DW zclZigIt_clusterRevision_all
    119          {
    120            // *** General Basic Cluster Attributes ***
    121            {
    122              ZCL_CLUSTER_ID_GEN_BASIC,
    123              { // Attribute record
    124                ATTRID_BASIC_ZCL_VERSION,
    125                ZCL_DATATYPE_UINT8,
    126                ACCESS_CONTROL_READ,
    127                (void *)&zclZigIt_ZCLVersion
    128              }
    129            },  
    130            {
    131              ZCL_CLUSTER_ID_GEN_BASIC,             // Cluster IDs - defined in the foundation (ie. zcl.h)
    132              {  // Attribute record
    133                ATTRID_BASIC_HW_VERSION,            // Attribute ID - Found in Cluster Library header (ie. zcl_general.h)
    134                ZCL_DATATYPE_UINT8,                 // Data Type - found in zcl.h
    135                ACCESS_CONTROL_READ,                // Variable access control - found in zcl.h
    136                (void *)&zclZigIt_HWRevision  // Pointer to attribute variable
    137              }
    138            },
    139            {
    140              ZCL_CLUSTER_ID_GEN_BASIC,
    141              { // Attribute record
    142                ATTRID_BASIC_MANUFACTURER_NAME,
    143                ZCL_DATATYPE_CHAR_STR,
    144                ACCESS_CONTROL_READ,
    145                (void *)zclZigIt_ManufacturerName
    146              }
    147            },
    148            {
    149              ZCL_CLUSTER_ID_GEN_BASIC,
    150              { // Attribute record
    151                ATTRID_BASIC_MODEL_ID,
    152                ZCL_DATATYPE_CHAR_STR,
    153                ACCESS_CONTROL_READ,
    154                (void *)zclZigIt_ModelId
    155              }
    156            },
    157            {
    158              ZCL_CLUSTER_ID_GEN_BASIC,
    159              { // Attribute record
    160                ATTRID_BASIC_DATE_CODE,
    161                ZCL_DATATYPE_CHAR_STR,
    162                ACCESS_CONTROL_READ,
    163                (void *)zclZigIt_DateCode
    164              }
    165            },
    166            {
    167              ZCL_CLUSTER_ID_GEN_BASIC,
    168              { // Attribute record
    169                ATTRID_BASIC_POWER_SOURCE,
    170                ZCL_DATATYPE_ENUM8,
    171                ACCESS_CONTROL_READ,
    172                (void *)&zclZigIt_PowerSource
    173              }
    174            },
    175            {
    176              ZCL_CLUSTER_ID_GEN_BASIC,
    177              { // Attribute record
    178                ATTRID_BASIC_LOCATION_DESC,
    179                ZCL_DATATYPE_CHAR_STR,
    180                (ACCESS_CONTROL_READ | ACCESS_CONTROL_WRITE),
    181                (void *)zclZigIt_LocationDescription
    182              }
    183            },
    184            {
    185              ZCL_CLUSTER_ID_GEN_BASIC,
    186              { // Attribute record
    187                ATTRID_BASIC_PHYSICAL_ENV,
    188                ZCL_DATATYPE_ENUM8,
    189                (ACCESS_CONTROL_READ | ACCESS_CONTROL_WRITE),
    190                (void *)&zclZigIt_PhysicalEnvironment
    191              }
    192            },
    193            {
    194              ZCL_CLUSTER_ID_GEN_BASIC,
    195              { // Attribute record
    196                ATTRID_BASIC_DEVICE_ENABLED,
    197                ZCL_DATATYPE_BOOLEAN,
    198                (ACCESS_CONTROL_READ | ACCESS_CONTROL_WRITE),
    199                (void *)&zclZigIt_DeviceEnable
    200              }
    201            },
    202            {
    203              ZCL_CLUSTER_ID_GEN_BASIC,
    204              {  // Attribute record
    205                ATTRID_CLUSTER_REVISION,
    206                ZCL_DATATYPE_UINT16,
    207                ACCESS_CONTROL_READ,
    208                (void *)&zclZigIt_clusterRevision_all
    209              }
    210            },  
    211          
    212            // *** Identify Cluster Attribute ***
    213            {
    214              ZCL_CLUSTER_ID_GEN_IDENTIFY,
    215              { // Attribute record
    216                ATTRID_IDENTIFY_TIME,
    217                ZCL_DATATYPE_UINT16,
    218                (ACCESS_CONTROL_READ | ACCESS_CONTROL_WRITE),
    219                (void *)&zclZigIt_IdentifyTime
    220              }
    221            },  
    222            {
    223              ZCL_CLUSTER_ID_GEN_IDENTIFY,
    224              {  // Attribute record
    225                ATTRID_CLUSTER_REVISION,
    226                ZCL_DATATYPE_UINT16,
    227                ACCESS_CONTROL_READ | ACCESS_GLOBAL,
    228                (void *)&zclZigIt_clusterRevision_all
    229              }
    230            },
    231          
    232          
    233            // *** On / Off Switch Configuration Cluster *** //
    234            {
    235              ZCL_CLUSTER_ID_GEN_ON_OFF_SWITCH_CONFIG,
    236              { // Attribute record
    237                ATTRID_ON_OFF_SWITCH_TYPE,
    238                ZCL_DATATYPE_ENUM8,
    239                ACCESS_CONTROL_READ,
    240                (void *)&zclZigIt_OnOffSwitchType
    241              }
    242            },
    243            {
    244              ZCL_CLUSTER_ID_GEN_ON_OFF_SWITCH_CONFIG,
    245              { // Attribute record
    246                ATTRID_ON_OFF_SWITCH_ACTIONS,
    247                ZCL_DATATYPE_ENUM8,
    248                ACCESS_CONTROL_READ | ACCESS_CONTROL_WRITE,
    249                (void *)&zclZigIt_OnOffSwitchActions
    250              }
    251            },
    252            {
    253              ZCL_CLUSTER_ID_GEN_ON_OFF_SWITCH_CONFIG,
    254              {  // Attribute record
    255                ATTRID_CLUSTER_REVISION,
    256                ZCL_DATATYPE_UINT16,
    257                ACCESS_CONTROL_READ,
    258                (void *)&zclZigIt_clusterRevision_all
    259              }
    260            },
    261            // *** On / Off Cluster *** //
    262            {
    263              ZCL_CLUSTER_ID_GEN_ON_OFF,
    264              {  // Attribute record
    265                ATTRID_CLUSTER_REVISION,
    266                ZCL_DATATYPE_UINT16,
    267                ACCESS_CONTROL_READ | ACCESS_CLIENT,
    268                (void *)&zclZigIt_clusterRevision_all
    269              }
    270            },
    271            // *** Groups Cluster *** //
    272            {
    273              ZCL_CLUSTER_ID_GEN_GROUPS,
    274              {  // Attribute record
    275                ATTRID_CLUSTER_REVISION,
    276                ZCL_DATATYPE_UINT16,
    277                ACCESS_CONTROL_READ | ACCESS_CLIENT,
    278                (void *)&zclZigIt_clusterRevision_all
    279              }
    280            }
    281          };
    282          

   \                                 In  segment CODE_C, align 1
    283          uint8 CONST zclZigIt_NumAttributes = ( sizeof(zclZigIt_Attrs) / sizeof(zclZigIt_Attrs[0]) );
   \                     zclZigIt_NumAttributes:
   \   000000   11           DB 17
    284          
    285          /*********************************************************************
    286           * SIMPLE DESCRIPTOR
    287           */
    288          // This is the Cluster ID List and should be filled with Application
    289          // specific cluster IDs.

   \                                 In  segment XDATA_ROM_C, align 1
    290          const cId_t zclZigIt_InClusterList[] =
   \                     zclZigIt_InClusterList:
   \   000000   0000         DW 0
   \   000002   0300         DW 3
   \   000004   0700         DW 7
    291          {
    292            ZCL_CLUSTER_ID_GEN_BASIC,
    293            ZCL_CLUSTER_ID_GEN_IDENTIFY,
    294            ZCL_CLUSTER_ID_GEN_ON_OFF_SWITCH_CONFIG
    295          };
    296          
    297          #define zclZigIt_MAX_INCLUSTERS    ( sizeof( zclZigIt_InClusterList ) / sizeof( zclZigIt_InClusterList[0] ))
    298          

   \                                 In  segment XDATA_ROM_C, align 1
    299          const cId_t zclZigIt_OutClusterList[] =
   \                     zclZigIt_OutClusterList:
   \   000000   0300         DW 3
   \   000002   0600         DW 6
   \   000004   0400         DW 4
    300          {
    301            ZCL_CLUSTER_ID_GEN_IDENTIFY,
    302            ZCL_CLUSTER_ID_GEN_ON_OFF,
    303            ZCL_CLUSTER_ID_GEN_GROUPS,
    304          };
    305          
    306          #define zclZigIt_MAX_OUTCLUSTERS   ( sizeof( zclZigIt_OutClusterList ) / sizeof( zclZigIt_OutClusterList[0] ))
    307          

   \                                 In  segment XDATA_I, align 1, keep-with-next
    308          SimpleDescriptionFormat_t zclZigIt_SimpleDesc =
   \                     zclZigIt_SimpleDesc:
   \   000000                DS 12
   \   00000C                REQUIRE `?<Initializer for zclZigIt_SimpleDesc>`
   \   00000C                REQUIRE __INIT_XDATA_I
    309          {
    310            SAMPLESW_ENDPOINT,                  //  int Endpoint;
    311            ZCL_HA_PROFILE_ID,                  //  uint16 AppProfId[2];
    312            ZCL_HA_DEVICEID_ON_OFF_LIGHT_SWITCH,//  uint16 AppDeviceId[2];
    313            SAMPLESW_DEVICE_VERSION,            //  int   AppDevVer:4;
    314            SAMPLESW_FLAGS,                     //  int   AppFlags:4;
    315            zclZigIt_MAX_INCLUSTERS,         //  byte  AppNumInClusters;
    316            (cId_t *)zclZigIt_InClusterList, //  byte *pAppInClusterList;
    317            zclZigIt_MAX_OUTCLUSTERS,        //  byte  AppNumInClusters;
    318            (cId_t *)zclZigIt_OutClusterList //  byte *pAppInClusterList;
    319          };
    320          
    321          /*********************************************************************
    322           * GLOBAL FUNCTIONS
    323           */
    324          
    325          /*********************************************************************
    326           * LOCAL FUNCTIONS
    327           */
    328          /*********************************************************************
    329           * @fn      zclSampleLight_OnOffCB
    330           *
    331           * @brief   Callback from the ZCL General Cluster Library when
    332           *          it received an On/Off Command for this application.
    333           *
    334           * @param   cmd - COMMAND_ON, COMMAND_OFF or COMMAND_TOGGLE
    335           *
    336           * @return  none
    337           */
    338          static void zclSampleLight_OnOffCB( uint8 cmd )
                             ^
Warning[Pe177]: function "zclSampleLight_OnOffCB" was declared but never
          referenced
    339          {
    340            afIncomingMSGPacket_t *pPtr = zcl_getRawAFMsg();
    341          
    342            uint8 OnOff;
    343          
    344            //zclZigIt_DstAddr.addr.shortAddr = pPtr->srcAddr.addr.shortAddr;
    345          
    346            // Turn on the light
    347            if ( cmd == COMMAND_ON )
    348            {
    349              OnOff = LIGHT_ON;
    350            }
    351            // Turn off the light
    352            else if ( cmd == COMMAND_OFF )
    353            {
    354              OnOff = LIGHT_OFF;
    355            }
    356            // Toggle the light
    357            else if ( cmd == COMMAND_TOGGLE )
    358            {
    359              if (zclZigIt_OnOff == LIGHT_ON)
    360              {
    361                OnOff = LIGHT_OFF;
    362              }
    363              else
    364              {
    365                OnOff = LIGHT_ON;
    366              }
    367            }
    368          
    369            zclZigIt_OnOff = OnOff;
    370            //zclZigIt_UpdateLedState();
    371            
    372            // update the display
    373            //UI_UpdateLcd( );
    374          }
    375          
    376          
    377          /*********************************************************************
    378           * @fn      zclSampleLight_ResetAttributesToDefaultValues
    379           *
    380           * @brief   Reset all writable attributes to their default values.
    381           *
    382           * @param   none
    383           *
    384           * @return  none
    385           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    386          void zclZigIt_ResetAttributesToDefaultValues(void)
   \                     zclZigIt_ResetAttributesToDefaultValues:
    387          {
   \   000000   C082         PUSH      DPL
   \   000002   C083         PUSH      DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    388            int i;
    389            
    390            zclZigIt_LocationDescription[0] = 16;
   \   000004   90....       MOV       DPTR,#zclZigIt_LocationDescription
   \   000007   7410         MOV       A,#0x10
   \   000009   F0           MOVX      @DPTR,A
    391            for (i = 1; i <= 16; i++)
    392            {
    393              zclZigIt_LocationDescription[i] = ' ';
   \   00000A   7420         MOV       A,#0x20
   \   00000C   A3           INC       DPTR
   \   00000D   7810         MOV       R0,#0x10
   \                     ??zclZigIt_ResetAttributesToDefaultValues_0:
   \   00000F   F0           MOVX      @DPTR,A
   \   000010   A3           INC       DPTR
   \   000011   D8FC         DJNZ      R0,??zclZigIt_ResetAttributesToDefaultValues_0
    394            }
    395            
    396            zclZigIt_PhysicalEnvironment = DEFAULT_PHYSICAL_ENVIRONMENT;
   \   000013   90....       MOV       DPTR,#zclZigIt_PhysicalEnvironment
   \   000016   E4           CLR       A
   \   000017   F0           MOVX      @DPTR,A
    397            zclZigIt_DeviceEnable = DEFAULT_DEVICE_ENABLE_STATE;
   \   000018   90....       MOV       DPTR,#zclZigIt_DeviceEnable
   \   00001B   04           INC       A
   \   00001C   F0           MOVX      @DPTR,A
    398            
    399            zclZigIt_IdentifyTime = DEFAULT_IDENTIFY_TIME;
   \   00001D   90....       MOV       DPTR,#zclZigIt_IdentifyTime
   \   000020   E4           CLR       A
   \   000021   F0           MOVX      @DPTR,A
   \   000022   A3           INC       DPTR
   \   000023   F0           MOVX      @DPTR,A
    400            
    401            zclZigIt_OnOffSwitchActions = ON_OFF_SWITCH_ACTIONS_TOGGLE; //note that the default specified by the zcl spec is ON_OFF_SWITCH_ACTIONS_ON, but for backward compatibility with TI's legacy sample-switch, we use here ON_OFF_SWITCH_ACTIONS_TOGGLE
   \   000024   90....       MOV       DPTR,#zclZigIt_OnOffSwitchActions
   \   000027   7402         MOV       A,#0x2
   \   000029   F0           MOVX      @DPTR,A
    402          }
   \   00002A   D083         POP       DPH
   \   00002C   D082         POP       DPL
   \   00002E   02....       LJMP      ?BRET

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for zclZigIt_LocationDescription`:
   \   000000   10           DB 16
   \   000001   20           DB 32
   \   000002   20           DB 32
   \   000003   20           DB 32
   \   000004   20           DB 32
   \   000005   20           DB 32
   \   000006   20           DB 32
   \   000007   20           DB 32
   \   000008   20           DB 32
   \   000009   20           DB 32
   \   00000A   20           DB 32
   \   00000B   20           DB 32
   \   00000C   20           DB 32
   \   00000D   20           DB 32
   \   00000E   20           DB 32
   \   00000F   20           DB 32
   \   000010   20           DB 32

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for zclZigIt_DeviceEnable>`:
   \   000000   01           DB 1

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for zclZigIt_SimpleDesc>`:
   \   000000   08           DB 8
   \   000001   0401         DW 260
   \   000003   0301         DW 259
   \   000005   01           DB 1
   \   000006   03           DB 3
   \   000007   ....         DW zclZigIt_InClusterList
   \   000009   03           DB 3
   \   00000A   ....         DW zclZigIt_OutClusterList
    403          
    404          /****************************************************************************
    405          ****************************************************************************/
    406          
    407          

   Maximum stack usage in bytes:

   ISTACK Function
   ------ --------
      2   zclZigIt_ResetAttributesToDefaultValues


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       1  ?<Initializer for zclZigIt_DeviceEnable>
      17  ?<Initializer for zclZigIt_LocationDescription
      12  ?<Initializer for zclZigIt_SimpleDesc>
     136  zclZigIt_Attrs
      17  zclZigIt_DateCode
       1  zclZigIt_DeviceEnable
       1  zclZigIt_HWRevision
       2  zclZigIt_IdentifyTime
       6  zclZigIt_InClusterList
      17  zclZigIt_LocationDescription
      10  zclZigIt_ManufacturerName
      12  zclZigIt_ModelId
       1  zclZigIt_NumAttributes
       6  zclZigIt_OutClusterList
       1  zclZigIt_PhysicalEnvironment
       1  zclZigIt_PowerSource
      49  zclZigIt_ResetAttributesToDefaultValues
      12  zclZigIt_SimpleDesc
       1  zclZigIt_ZCLVersion
       2  zclZigIt_clusterRevision_all
       6  -- Other

 
  49 bytes in segment BANKED_CODE
   6 bytes in segment BANK_RELAYS
 137 bytes in segment CODE_C
  30 bytes in segment XDATA_I
  30 bytes in segment XDATA_ID
  56 bytes in segment XDATA_ROM_C
   3 bytes in segment XDATA_Z
 
 173 bytes of CODE     memory
  56 bytes of CONST    memory
  49 bytes of HUGECODE memory
  33 bytes of XDATA    memory

Errors: none
Warnings: 1
